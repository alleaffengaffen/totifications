name: urlwatch
on:
  push:
    branches:
      - develop
  #schedule:
    #- cron: '0 6-22/1 * * *'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    permissions: 
      id-token: write
      contents: read
    steps:
      - name: Setup timzone
        uses: zcong1993/setup-timezone@v2.0.0
        with:
          timezone: Europe/Zurich
      - name: Fetch secrets from AKeyless
        id: fetch-secrets
        uses: LanceMcCarthy/akeyless-action@v3
        with:
          access-id: ${{ secrets.AKEYLESS_ACCESS_ID }}
          static-secrets: |
            {
              "/actions/telegram_token":"TELEGRAM_TOKEN",
              "/actions/chat_id":"CHAT_ID"
            }
      - name: Setup go-template-cli
        run: |
          curl -fsSL -o /tmp/tpl https://github.com/bluebrown/go-template-cli/releases/download/v0.2.0/tpl-linux-amd64
          sudo install -m 555 /tmp/tpl /usr/local/bin/tpl
          tpl --version
      - uses: actions/checkout@v4
      - name: Set up Python 3.x
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel
          pip install pyyaml minidb requests keyring appdirs lxml cssselect html2text urlwatch
          pip install -r requirements.txt
      - name: Download cached db
        continue-on-error: true
        uses: dawidd6/action-download-artifact@v3
        with:
          workflow: urlwatch.yml
          workflow_conclusion: completed
          branch: develop
          name: cachedb
      - name: Template configs
        run: |
          cat <<EOF | tpl -f urlwatch.yaml > rendered-urlwatch.yaml
          {
            "telegram_token": "${{ env.TELEGRAM_TOKEN }}",
            "chat_id": "${{ env.CHAT_ID }}"
          }
          EOF
      - name: Run urlwatch
        run: |
          urlwatch --config=rendered-urlwatch.yaml --urls=urls.yaml --cache=cache.db
      - name: Upload updated db
        uses: actions/upload-artifact@v4
        with:
          name: cachedb
          path: cache.db
          retention-days: 1
