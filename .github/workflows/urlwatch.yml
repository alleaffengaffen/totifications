name: urlwatch
on:
  push:
    branches:
      - develop
  schedule:
    - cron: "0 6-22/4 * * 1-5"
  workflow_dispatch:

env:
  STATE_BUCKET: "gh-totifications"
  STATE_BUCKET_REGION: "eu-west-1"

jobs:
  run:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::351425708426:role/gh-totifications
          role-session-name: totifications
          aws-region: ${{ env.STATE_BUCKET_REGION }}
      - name: setup go-template-cli
        run: |
          curl -fsSL -o /tmp/tpl https://github.com/bluebrown/go-template-cli/releases/download/v0.3.1/tpl-linux-amd64
          sudo install -m 555 /tmp/tpl /usr/local/bin/tpl
          tpl --version
      - uses: actions/checkout@v4
      - name: Set up Python 3.x
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: install urlwatch & dependencies
        run: |
          python -m pip install --upgrade pip wheel
          pip install -r requirements.txt
      - name: grab cachedb from s3
        if: always()
        run: aws s3 cp s3://${{ env.STATE_BUCKET }}/cache.db cache.db
      - name: template urlwatch config
        if: always()
        run: |
          cat <<EOF | tpl -f urlwatch.yaml > rendered-urlwatch.yaml
          {
            "telegram_token": "${{ secrets.TELEGRAM_TOKEN }}",
            "chat_id": "${{ secrets.CHAT_ID }}"
          }
          EOF
      - name: run urlwatch
        if: always()
        run: urlwatch --config=rendered-urlwatch.yaml --urls=urls.yaml --cache=cache.db
      - name: upload new cachedb to s3
        if: always()
        run: aws s3 cp cache.db s3://${{ env.STATE_BUCKET }}/cache.db
